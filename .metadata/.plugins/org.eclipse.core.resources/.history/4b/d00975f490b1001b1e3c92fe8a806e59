/*
 * stm32main.c
 *
 *  Created on: May 7, 2021
 *      Author: Laia
 */

#include "components/stm32main.h"
#include "components/masb_comm_s.h" //to have available all the functionality defined in masb_comm_s


void setup(void) { //toma como parametro el puntero a la estrucutra Handles_S
    MASB_COMM_S_waitForMessage(); //esperamos la llegada del primer byte, instrucciones
}

void loop(void) {
    if (MASB_COMM_S_dataReceived()) { // Si se ha recibido un mensaje...

 		switch(MASB_COMM_S_command()) { // Miramos que comando hemos recibido

 			case START_CV_MEAS: // Si hemos recibido START_CV_MEAS

                 // Leemos la configuracion que se nos ha enviado en el mensaje y
                 // la guardamos en la variable cvConfiguration
				cvConfiguration = MASB_COMM_S_getCvConfiguration();

 				__NOP(); // Esta instruccion no hace nada y solo sirve para poder anadir un breakpoint


 				break;

 			case START_CA_MEAS:
				// Leemos la configuracion que se nos ha enviado en el mensaje y
				// la guardamos en la variable caConfiguration
				caConfiguration = MASB_COMM_S_getCaConfiguration();
				__NOP();

				break;


			case STOP_MEAS: // Si hemos recibido STOP_MEAS

 				/*
 				 * Debemos de enviar esto desde CoolTerm:
 				 * 020300
 				 */
 				__NOP(); // Esta instruccion no hace nada y solo sirve para poder anadir un breakpoint

 				// Aqui iria el codigo para tener la medicion si implementais el comando stop.


 				break;

 			default: // En el caso que se envia un comando que no exista, espera otro

 				break;

 		}

       // Una vez procesado los comando, esperamos el siguiente
 		MASB_COMM_S_waitForMessage();

 	}

 	// Aqui es donde deberia de ir el codigo de control de las mediciones si se quiere implementar
   // el comando de STOP.

}
